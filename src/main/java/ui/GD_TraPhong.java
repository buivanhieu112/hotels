/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package ui;

import java.awt.Graphics;
import java.awt.Graphics2D;
import java.awt.HeadlessException;
import java.awt.print.PageFormat;
import java.awt.print.Paper;
import java.awt.print.Printable;
import java.awt.print.PrinterJob;

import java.sql.Date;
import java.sql.Timestamp;
import java.text.NumberFormat;
import java.text.SimpleDateFormat;
import java.time.LocalDateTime;
import java.time.format.DateTimeFormatter;
import java.util.ArrayList;
import java.util.Locale;

import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.ListSelectionModel;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;
import javax.swing.table.DefaultTableModel;

import com.itextpdf.text.*;
import dao.DAO_DichVu;
import dao.DAO_DichVuSuDung;
import dao.DAO_HoaDon;
import dao.DAO_KhachHang;
import dao.DAO_LoaiPhong;
import dao.DAO_NhanVien;
import dao.DAO_PhieuThue;
import dao.DAO_Phong;
import entity.DichVu;
import entity.DichVuSuDung;
import entity.HoaDon;
import entity.KhachHang;
import entity.LoaiPhong;
import entity.NhanVien;
import entity.PhieuThue;
import entity.Phong;

/**
 *
 * @author admin
 */
public class GD_TraPhong extends javax.swing.JFrame {

    /**
	 * 
	 */
	private static final long serialVersionUID = 1L;

	/**
     * Creates new form GD_TraPhong
     */
    public GD_TraPhong() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    
    private DefaultTableModel modelDSP;
    private String[] colsDSP={"Mã PT","Mã HĐ","Mã Phòng", "Số phòng", "Loại phòng", "Tên Khách", "Ngày Đặt Phòng","Ngày Trả Phòng"};
    
//    public void DocDuLieuDatabaseVaoTableDSHD() {
//		ArrayList<HoaDon> list = DAO_HoaDon.getAllHoaDonChuaThanhToan();
//		for (HoaDon hd : list) {
//			modelDSHD.addRow(new Object[] {
//					hd.getMaHD(),
//					getTenKH(hd.getKhachHang().getMaKH()),
//					getSoCMNDKH(hd.getKhachHang().getMaKH()),
//					getSoDTKH(hd.getKhachHang().getMaKH())});}
//    }
    
    public void DocDuLieuDatabaseVaoTableDSP() {
		ArrayList<PhieuThue> list = DAO_PhieuThue.getAllHoaDonPhongChuaThanhToan();
		for (PhieuThue pt : list) {
			modelDSP.addRow(new Object[] {
					pt.getMaPT(),
					pt.getHoaDon().getMaHD(),
					pt.getPhong().getMaPhong(),
					getTenPhong(pt.getPhong().getMaPhong()),
					getTenLP(pt.getPhong().getLoaiPhong().getMaLP()),
					getTenKH(pt.getHoaDon().getKhachHang().getMaKH()),
//					getCMND(pt.getHoaDon().getKhachHang().getMaKH()),
//					dinhDangTienTe(getGiaLP(hdp.getPhong().getLoaiPhong().getMaLP())),
					new SimpleDateFormat("dd-MM-yyyy").format(new Date(pt.getNgayDatPhong().getTime())),
					new SimpleDateFormat("dd-MM-yyyy").format(new Date(pt.getNgayTraPhong().getTime())),
			});}
    }
    
    public String getTenPhong(String maPhong) {
    	ArrayList<Phong> listPhong = DAO_Phong.getAllPhong();
    	for (Phong p : listPhong) {
    		if(p.getMaPhong().equalsIgnoreCase(maPhong))
    			return p.getTenPhong();
    	}
    	return "";
    }
    
    public String getTenLP(String maLP) {
    	ArrayList<LoaiPhong> listLP = DAO_LoaiPhong.getAllLoaiPhong();
    	for (LoaiPhong lp : listLP) {
    		if(lp.getMaLP().equalsIgnoreCase(maLP))
    			return lp.getTenLP();
    	}
    	return "";
    }
    
    public String getTenDV(String maDV) {
    	ArrayList<DichVu> listDV = DAO_DichVu.getAllDichVu();
    	for (DichVu dv : listDV) {
    		if(dv.getMaDV().equalsIgnoreCase(maDV))
    			return dv.getTenDV();
    	}
    	return "";
    }
    
    public double getGiaLP(String maLP) {
    	ArrayList<LoaiPhong> listLP = DAO_LoaiPhong.getAllLoaiPhong();
    	for (LoaiPhong lp : listLP) {
    		if(lp.getMaLP().equalsIgnoreCase(maLP)) {
//    			BigDecimal giaLP = new BigDecimal(lp.getGiaLP()).setScale(0, BigDecimal.ROUND_HALF_UP);
    			return lp.getGiaLP();
    		}
    	}
    	return 0;
    }
    
    public String getTenKH(String maKH) {
    	ArrayList<KhachHang> listKH = DAO_KhachHang.getAllKhachHang();
    	for (KhachHang kh : listKH) {
    		if(kh.getMaKH().equalsIgnoreCase(maKH))
    			return kh.getTenKH();
    	}
    	return "";
    }
    
    public String getSoDTKH(String maKH) {
    	ArrayList<KhachHang> listKH = DAO_KhachHang.getAllKhachHang();
    	for (KhachHang kh : listKH) {
    		if(kh.getMaKH().equalsIgnoreCase(maKH))
    			return kh.getSoDT();
    	}
    	return "";
    }
    public String getCMND(String maKH) {
    	ArrayList<KhachHang> listKH = DAO_KhachHang.getAllKhachHang();
    	for (KhachHang kh : listKH) {
    		if(kh.getMaKH().equalsIgnoreCase(maKH))
    			return kh.getSoCMND();
    	}
    	return "";
    }
    
    
    
    public void DocDuLieuDatabaseVaoTextField(){
    	int i = tblDSPD.getSelectedRow();
    	String tenNV = null;
		LocalDateTime ngayHienTai = LocalDateTime.now();
		
		txtNgayLapHD.setText(ngayHienTai.format(DateTimeFormatter.ofPattern("dd-MM-yyyy hh:mm:ss")));
		txtMaHD.setText(String.valueOf(tblDSPD.getValueAt(i, 1)));
		txtMaPhong.setText(String.valueOf(tblDSPD.getValueAt(i, 2)));
		txtTenPhong.setText(String.valueOf(tblDSPD.getValueAt(i, 3)));
		txtLoaiPhong.setText(String.valueOf(tblDSPD.getValueAt(i, 4)));
		txtTenKH.setText(String.valueOf(tblDSPD.getValueAt(i, 5)));
		
		txtNgayNhanPhong.setText(String.valueOf(tblDSPD.getValueAt(i, 6)));
		txtNgayTraPhong.setText(String.valueOf(tblDSPD.getValueAt(i, 7)));
		
//		txtNgayNhanPhong.setText(ngayHienTai.format(DateTimeFormatter.ofPattern("dd-MM-yyyy hh:mm:ss a")));
		
		
		ArrayList<NhanVien> listNV = DAO_NhanVien.getAllNhanVien();
    	for (NhanVien nv : listNV) {
			if(nv.isTinhTrang()==true)
				tenNV = nv.getTenNV();
		}
		txtTenNV.setText(tenNV);
    }
    
    public void TinhTongTienPhongVaDichVu() {
    	int i = tblDSPD.getSelectedRow();
    	Timestamp ngayDat,ngayTra;
    	double s,tienPhong=0,tongTienDV=0,tongThanhTien = 0, tienCoc=0;
    	int soDV=0;
    	int soNgay;
    	PhieuThue phieuThue = new PhieuThue(Integer.parseInt(String.valueOf(tblDSPD.getValueAt(i, 0))));
    	ArrayList<PhieuThue> listPT = DAO_PhieuThue.getAllPhieuThueChuaThanhToanTheoMaPT(phieuThue.getMaPT());
    	if(i!=-1) {
    		for(PhieuThue pt: listPT) {
    			ngayDat = pt.getNgayDatPhong();
            	System.out.println(ngayDat);
            	ngayTra = new Timestamp(System.currentTimeMillis());
            	NumberFormat numf = NumberFormat.getNumberInstance();
                numf.setMaximumFractionDigits(1);
                 s =(double)(ngayTra.getTime()-ngayDat.getTime())/(60*60*1000);
                soNgay = (int) (Math.ceil(s/24));
//            	soNgay = pt.tinhNgay();
            	if(soNgay<=0)
                    soNgay+=1;
                 tienPhong +=  soNgay*getGiaLP(pt.getPhong().getLoaiPhong().getMaLP());
                 
                 ArrayList<DichVuSuDung> listDvsd = DAO_DichVuSuDung.getAllHDDV(pt.getMaPT());
                 for(DichVuSuDung dvsd: listDvsd) {
                	 tongTienDV+= dvsd.getSoLuong()*getGiaDV(dvsd.getDichVu().getMaDV());
                	 soDV++;
                 }
                 tienCoc += pt.getTienCoc();
                 
         		 tongThanhTien = (1.0)*(tienPhong+tongTienDV-tienCoc);
         		 
         		 txtSoNgayThue.setText(soNgay+"");
         		 
                 txtTienPhong.setText(dinhDangTienTe(tienPhong));
         		 txtSoLuongDV.setText(soDV+"");
         		 txtTienDV.setText(dinhDangTienTe(tongTienDV));
                 txtTienCoc.setText(String.valueOf(dinhDangTienTe(pt.getTienCoc())));
                 
                 txtTongThanhTien.setText(dinhDangTienTe(tongThanhTien));
    		}
    	}
    }
    
    public void capNhatNgayTraPhong(int ma){
    	ArrayList<PhieuThue> list = DAO_PhieuThue.getAllPhieuThueChuaThanhToanTheoMaPT(ma);
    	for (PhieuThue pt : list) {
    		DAO_PhieuThue.capNhatNgayTraPhong(pt);
		}
    }
    
    public double getGiaDV(String maDV) {
    	ArrayList<DichVu> listDV = DAO_DichVu.getAllDichVu();
    	for (DichVu dv : listDV) {
    		if(dv.getMaDV().equalsIgnoreCase(maDV)) {
//    			BigDecimal giaLP = new BigDecimal(lp.getGiaLP()).setScale(0, BigDecimal.ROUND_HALF_UP);
    			return dv.getGiaDV();
    		}
    	}
    	return 0;
    }
    
    public String dinhDangTienTe(double tien) {
    	Locale localeVN = new Locale("vi", "VN");
	    NumberFormat currencyVN = NumberFormat.getCurrencyInstance(localeVN);
    	return currencyVN.format(tien);
    }
    
    
    
    
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jRadioButtonMenuItem1 = new javax.swing.JRadioButtonMenuItem();
        jLabel15 = new javax.swing.JLabel();
        jPanel5 = new javax.swing.JPanel();
        pnlDSHD = new javax.swing.JPanel();
        lblDSHD = new javax.swing.JLabel();
        txtTim = new javax.swing.JTextField();
        btnLamMoi = new javax.swing.JButton();
        btnTim = new javax.swing.JButton();
        scrollDSPD = new javax.swing.JScrollPane();
        tblDSPD = new javax.swing.JTable();
        pnlHDP = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        txtLoaiPhong = new javax.swing.JTextField();
        txtTenKH = new javax.swing.JTextField();
        txtTenNV = new javax.swing.JTextField();
        txtNgayTraPhong = new javax.swing.JTextField();
        txtSoNgayThue = new javax.swing.JTextField();
        txtTienPhong = new javax.swing.JTextField();
        txtSoLuongDV = new javax.swing.JTextField();
        txtTienDV = new javax.swing.JTextField();
        jLabel14 = new javax.swing.JLabel();
        txtTongThanhTien = new javax.swing.JTextField();
        jLabel16 = new javax.swing.JLabel();
        btnTinhTienThua = new javax.swing.JButton();
        txtTienThua = new javax.swing.JTextField();
        txtTienKhachTra = new javax.swing.JTextField();
        txtTenPhong = new javax.swing.JTextField();
        txtNgayNhanPhong = new javax.swing.JTextField();
        txtMaHD = new javax.swing.JTextField();
        btnThanhToan = new javax.swing.JButton();
        jLabel18 = new javax.swing.JLabel();
        txtNgayLapHD = new javax.swing.JTextField();
        jLabel19 = new javax.swing.JLabel();
        txtMaPhong = new javax.swing.JTextField();
        jLabel20 = new javax.swing.JLabel();
        txtTienCoc = new javax.swing.JTextField();
        jSeparator1 = new javax.swing.JSeparator();
        btnTinhSoNgayThue = new javax.swing.JButton();
        jLabel17 = new javax.swing.JLabel();
        btnQuayLai = new javax.swing.JButton();

        jRadioButtonMenuItem1.setSelected(true);
        jRadioButtonMenuItem1.setText("jRadioButtonMenuItem1");

        jLabel15.setText("jLabel15");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setUndecorated(true);

        jPanel5.setBackground(new java.awt.Color(102, 204, 255));

        pnlDSHD.setBackground(new java.awt.Color(153, 255, 255));

        lblDSHD.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        lblDSHD.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblDSHD.setText("DANH SÁCH PHÒNG ĐANG THUÊ");

        btnLamMoi.setIcon(new javax.swing.ImageIcon("C:\\hotels (4)\\hotels\\src\\main\\java\\images\\ic_refresh.png")); // NOI18N
        btnLamMoi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLamMoiActionPerformed(evt);
            }
        });

        btnTim.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btnTim.setIcon(new javax.swing.ImageIcon("C:\\hotels (4)\\hotels\\src\\main\\java\\images\\ic_search.png")); // NOI18N
        btnTim.setText("TÌM");
        btnTim.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTimActionPerformed(evt);
            }
        });

        tblDSPD.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Mã PT", "Số Phòng", "Loại Phòng", "Tên Khách", "Ngày Đặt Phòng"
            }
        ));
        scrollDSPD.setViewportView(tblDSPD);

        javax.swing.GroupLayout pnlDSHDLayout = new javax.swing.GroupLayout(pnlDSHD);
        pnlDSHD.setLayout(pnlDSHDLayout);
        pnlDSHDLayout.setHorizontalGroup(
            pnlDSHDLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlDSHDLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlDSHDLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblDSHD, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlDSHDLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(btnLamMoi, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(txtTim, javax.swing.GroupLayout.PREFERRED_SIZE, 393, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnTim, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(scrollDSPD))
                .addContainerGap())
        );
        pnlDSHDLayout.setVerticalGroup(
            pnlDSHDLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlDSHDLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblDSHD)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(pnlDSHDLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE, false)
                    .addComponent(txtTim, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnTim, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnLamMoi, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(scrollDSPD, javax.swing.GroupLayout.DEFAULT_SIZE, 430, Short.MAX_VALUE)
                .addContainerGap())
        );

        pnlHDP.setBackground(new java.awt.Color(153, 255, 255));

        jPanel2.setBackground(new java.awt.Color(153, 255, 255));

        jLabel1.setBackground(new java.awt.Color(153, 255, 255));
        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("HOÁ ĐƠN PHÒNG");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(jLabel1)
                .addGap(0, 11, Short.MAX_VALUE))
        );

        jLabel2.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel2.setText("Mã Hóa Đơn");

        jLabel3.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel3.setText("Tên Phòng");

        jLabel4.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel4.setText("Tên Khách");

        jLabel6.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel6.setText("Tổng Tiền Dịch Vụ");

        jLabel7.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel7.setText("Nhân Viên");

        jLabel8.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel8.setText("Ngày Nhận Phòng");

        jLabel9.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel9.setText("Ngày Trả Phòng");

        jLabel10.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel10.setText("Số Ngày Thuê");

        jLabel11.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel11.setText("Tổng Tiền Phòng");

        jLabel12.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel12.setText("Loại Phòng");

        jLabel13.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel13.setText("Số DV Đã Dùng");

        txtLoaiPhong.setEditable(false);
        txtLoaiPhong.setBackground(new java.awt.Color(204, 204, 204));

        txtTenKH.setEditable(false);
        txtTenKH.setBackground(new java.awt.Color(204, 204, 204));

        txtTenNV.setEditable(false);
        txtTenNV.setBackground(new java.awt.Color(204, 204, 204));
        txtTenNV.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtTenNVActionPerformed(evt);
            }
        });

        txtNgayTraPhong.setEditable(false);
        txtNgayTraPhong.setBackground(new java.awt.Color(204, 204, 204));

        txtSoNgayThue.setEditable(false);
        txtSoNgayThue.setBackground(new java.awt.Color(204, 204, 204));

        txtTienPhong.setEditable(false);
        txtTienPhong.setBackground(new java.awt.Color(204, 204, 204));

        txtSoLuongDV.setEditable(false);
        txtSoLuongDV.setBackground(new java.awt.Color(204, 204, 204));

        txtTienDV.setEditable(false);
        txtTienDV.setBackground(new java.awt.Color(204, 204, 204));

        jLabel14.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        jLabel14.setText("Tổng Tiền");

        txtTongThanhTien.setEditable(false);
        txtTongThanhTien.setBackground(new java.awt.Color(204, 204, 204));

        jLabel16.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel16.setText("Tiền Khách Trả");

        btnTinhTienThua.setText("Tính tiền thừa");
        btnTinhTienThua.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTinhTienThuaActionPerformed(evt);
            }
        });

        txtTienThua.setEditable(false);
        txtTienThua.setBackground(new java.awt.Color(204, 204, 204));

        txtTenPhong.setEditable(false);
        txtTenPhong.setBackground(new java.awt.Color(204, 204, 204));

        txtNgayNhanPhong.setEditable(false);
        txtNgayNhanPhong.setBackground(new java.awt.Color(204, 204, 204));

        txtMaHD.setEditable(false);
        txtMaHD.setBackground(new java.awt.Color(204, 204, 204));

        btnThanhToan.setBackground(new java.awt.Color(102, 204, 255));
        btnThanhToan.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        btnThanhToan.setText("THANH TOÁN");
        btnThanhToan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                try {
					btnThanhToanActionPerformed(evt);
				} catch (Exception e) {
					// TODO Auto-generated catch block
					e.printStackTrace();
				}
            }
        });

        jLabel18.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel18.setText("Ngày Lập HĐ");

        txtNgayLapHD.setEditable(false);
        txtNgayLapHD.setBackground(new java.awt.Color(204, 204, 204));

        jLabel19.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel19.setText("Mã Phòng");

        txtMaPhong.setEditable(false);
        txtMaPhong.setBackground(new java.awt.Color(204, 204, 204));

        jLabel20.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel20.setText("Tiền Khách Cọc");

        txtTienCoc.setEditable(false);
        txtTienCoc.setBackground(new java.awt.Color(204, 204, 204));

        btnTinhSoNgayThue.setBackground(new java.awt.Color(204, 255, 204));
        btnTinhSoNgayThue.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btnTinhSoNgayThue.setText("TÍNH TIỀN PHÒNG");
        btnTinhSoNgayThue.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTinhSoNgayThueActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnlHDPLayout = new javax.swing.GroupLayout(pnlHDP);
        pnlHDP.setLayout(pnlHDPLayout);
        pnlHDPLayout.setHorizontalGroup(
            pnlHDPLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jSeparator1)
            .addGroup(pnlHDPLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlHDPLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlHDPLayout.createSequentialGroup()
                        .addGroup(pnlHDPLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(pnlHDPLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addGroup(pnlHDPLayout.createSequentialGroup()
                                    .addComponent(jLabel3)
                                    .addGap(59, 59, 59)
                                    .addComponent(txtTenPhong, javax.swing.GroupLayout.PREFERRED_SIZE, 164, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(javax.swing.GroupLayout.Alignment.LEADING, pnlHDPLayout.createSequentialGroup()
                                    .addGap(127, 127, 127)
                                    .addComponent(txtTenKH, javax.swing.GroupLayout.PREFERRED_SIZE, 164, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(javax.swing.GroupLayout.Alignment.LEADING, pnlHDPLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(pnlHDPLayout.createSequentialGroup()
                                        .addComponent(jLabel19)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(txtMaPhong, javax.swing.GroupLayout.PREFERRED_SIZE, 164, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, pnlHDPLayout.createSequentialGroup()
                                        .addGroup(pnlHDPLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel2)
                                            .addComponent(jLabel4)
                                            .addComponent(jLabel12))
                                        .addGap(43, 43, 43)
                                        .addGroup(pnlHDPLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addComponent(txtLoaiPhong, javax.swing.GroupLayout.PREFERRED_SIZE, 164, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(txtMaHD, javax.swing.GroupLayout.PREFERRED_SIZE, 164, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                            .addComponent(jLabel7)
                            .addGroup(pnlHDPLayout.createSequentialGroup()
                                .addGap(127, 127, 127)
                                .addComponent(txtTenNV, javax.swing.GroupLayout.PREFERRED_SIZE, 164, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(pnlHDPLayout.createSequentialGroup()
                                .addGap(92, 92, 92)
                                .addComponent(btnTinhSoNgayThue)))
                        .addGap(36, 36, 36)
                        .addGroup(pnlHDPLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(pnlHDPLayout.createSequentialGroup()
                                .addComponent(jLabel18)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(txtNgayLapHD, javax.swing.GroupLayout.PREFERRED_SIZE, 164, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlHDPLayout.createSequentialGroup()
                                .addComponent(jLabel8)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(txtNgayNhanPhong, javax.swing.GroupLayout.PREFERRED_SIZE, 164, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlHDPLayout.createSequentialGroup()
                                .addComponent(jLabel6)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(txtTienDV, javax.swing.GroupLayout.PREFERRED_SIZE, 164, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(pnlHDPLayout.createSequentialGroup()
                                .addComponent(jLabel13)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(txtSoLuongDV, javax.swing.GroupLayout.PREFERRED_SIZE, 164, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(pnlHDPLayout.createSequentialGroup()
                                .addComponent(jLabel11)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(txtTienPhong, javax.swing.GroupLayout.PREFERRED_SIZE, 164, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(pnlHDPLayout.createSequentialGroup()
                                .addComponent(jLabel10)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(txtSoNgayThue, javax.swing.GroupLayout.PREFERRED_SIZE, 164, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlHDPLayout.createSequentialGroup()
                                .addComponent(jLabel9)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(txtNgayTraPhong, javax.swing.GroupLayout.PREFERRED_SIZE, 164, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(pnlHDPLayout.createSequentialGroup()
                                .addComponent(jLabel20)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(txtTienCoc, javax.swing.GroupLayout.PREFERRED_SIZE, 164, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(pnlHDPLayout.createSequentialGroup()
                        .addGroup(pnlHDPLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(pnlHDPLayout.createSequentialGroup()
                                .addComponent(jLabel14)
                                .addGap(18, 18, 18)
                                .addComponent(txtTongThanhTien, javax.swing.GroupLayout.PREFERRED_SIZE, 165, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(btnThanhToan, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(31, 31, 31)
                        .addGroup(pnlHDPLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(pnlHDPLayout.createSequentialGroup()
                                .addComponent(btnTinhTienThua)
                                .addGap(18, 18, 18)
                                .addComponent(txtTienThua, javax.swing.GroupLayout.PREFERRED_SIZE, 165, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(pnlHDPLayout.createSequentialGroup()
                                .addComponent(jLabel16)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtTienKhachTra, javax.swing.GroupLayout.PREFERRED_SIZE, 165, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        pnlHDPLayout.setVerticalGroup(
            pnlHDPLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlHDPLayout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlHDPLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2)
                    .addGroup(pnlHDPLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(txtMaHD, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel18)
                        .addComponent(txtNgayLapHD, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(pnlHDPLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlHDPLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel19)
                        .addComponent(txtMaPhong, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jLabel8)
                    .addComponent(txtNgayNhanPhong, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(12, 12, 12)
                .addGroup(pnlHDPLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlHDPLayout.createSequentialGroup()
                        .addGroup(pnlHDPLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtTenPhong, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3))
                        .addGap(12, 12, 12)
                        .addGroup(pnlHDPLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(pnlHDPLayout.createSequentialGroup()
                                .addComponent(jLabel12)
                                .addGap(18, 18, 18)
                                .addComponent(jLabel4))
                            .addGroup(pnlHDPLayout.createSequentialGroup()
                                .addComponent(txtLoaiPhong, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(txtTenKH, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(37, 37, 37)
                        .addGroup(pnlHDPLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel7)
                            .addComponent(txtTenNV, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addComponent(btnTinhSoNgayThue, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(pnlHDPLayout.createSequentialGroup()
                        .addGroup(pnlHDPLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel9)
                            .addComponent(txtNgayTraPhong, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(pnlHDPLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel10)
                            .addComponent(txtSoNgayThue, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(pnlHDPLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel11)
                            .addComponent(txtTienPhong, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(pnlHDPLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel13)
                            .addComponent(txtSoLuongDV, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(pnlHDPLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel6)
                            .addComponent(txtTienDV, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(pnlHDPLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel20)
                            .addComponent(txtTienCoc, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 25, Short.MAX_VALUE)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(31, 31, 31)
                .addGroup(pnlHDPLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel14)
                    .addGroup(pnlHDPLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(txtTongThanhTien, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel16)
                        .addComponent(txtTienKhachTra, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(pnlHDPLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnTinhTienThua, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtTienThua, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnThanhToan, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        jLabel17.setFont(new java.awt.Font("Segoe UI", 1, 36)); // NOI18N
        jLabel17.setText("TRẢ PHÒNG");

        btnQuayLai.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        btnQuayLai.setText("Quay Lại");
        btnQuayLai.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnQuayLaiActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addComponent(btnQuayLai)
                        .addGap(442, 442, 442)
                        .addComponent(jLabel17)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addComponent(pnlDSHD, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(pnlHDP, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel17)
                    .addComponent(btnQuayLai, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(pnlHDP, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(pnlDSHD, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
        setLocationRelativeTo(null);
        
        modelDSP = new DefaultTableModel(colsDSP,0);
        tblDSPD = new JTable(modelDSP);
        scrollDSPD.setViewportView(tblDSPD);
        
        tblDSPD.getColumnModel().getColumn(0).setPreferredWidth(30);
        tblDSPD.getColumnModel().getColumn(1).setPreferredWidth(40);
        tblDSPD.getColumnModel().getColumn(2).setPreferredWidth(50);
        tblDSPD.getColumnModel().getColumn(3).setPreferredWidth(40);
        tblDSPD.getColumnModel().getColumn(4).setPreferredWidth(50);
        tblDSPD.getColumnModel().getColumn(5).setPreferredWidth(80);
        
     // Sự kiện click trên tblDSHD
        ListSelectionModel listSelectionModelDSHD = tblDSPD.getSelectionModel();
        // Thiết lập chỉ click được 1 dòng
        listSelectionModelDSHD.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
        // Xử lý sự kiện click
        listSelectionModelDSHD.addListSelectionListener(new ListSelectionListener() {
    		
    		@Override
    		public void valueChanged(ListSelectionEvent e) {
    			// TODO Auto-generated method stub
    			try {
//    				setGiaTriMacDinh();
    				DocDuLieuDatabaseVaoTextField();
    			} catch (Exception e1) {
    				// TODO Auto-generated catch block
    				e1.printStackTrace();
    			} 
    		}
    	});
        setDefaultCloseOperation(0);
        
        
        DocDuLieuDatabaseVaoTableDSP();
    }// </editor-fold>//GEN-END:initComponents

//    modelDSP = new DefaultTableModel(colsDSP,0);
//    tblDSPD = new JTable(modelDSP);
//    scrollDSPD.setViewportView(tblDSPD);
//    
//    tblDSPD.getColumnModel().getColumn(0).setPreferredWidth(30);
//    tblDSPD.getColumnModel().getColumn(1).setPreferredWidth(40);
//    tblDSPD.getColumnModel().getColumn(2).setPreferredWidth(50);
//    tblDSPD.getColumnModel().getColumn(3).setPreferredWidth(40);
//    tblDSPD.getColumnModel().getColumn(4).setPreferredWidth(50);
//    tblDSPD.getColumnModel().getColumn(5).setPreferredWidth(80);
//    
// // Sự kiện click trên tblDSHD
//    ListSelectionModel listSelectionModelDSHD = tblDSPD.getSelectionModel();
//    // Thiết lập chỉ click được 1 dòng
//    listSelectionModelDSHD.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
//    // Xử lý sự kiện click
//    listSelectionModelDSHD.addListSelectionListener(new ListSelectionListener() {
//		
//		@Override
//		public void valueChanged(ListSelectionEvent e) {
//			// TODO Auto-generated method stub
//			try {
////				setGiaTriMacDinh();
//				DocDuLieuDatabaseVaoTextField();
//			} catch (Exception e1) {
//				// TODO Auto-generated catch block
//				e1.printStackTrace();
//			} 
//		}
//	});
//    setDefaultCloseOperation(0);
//    
//    
//    DocDuLieuDatabaseVaoTableDSP();
    
    private void btnLamMoiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLamMoiActionPerformed
        // TODO add your handling code here:
    	
    	modelDSP.setRowCount(0);
    	DocDuLieuDatabaseVaoTableDSP();
    	txtTim.setText("");
    	txtTim.requestFocus();
    	
    }//GEN-LAST:event_btnLamMoiActionPerformed
    public void timKH(String ten) {
		ArrayList<PhieuThue> list = DAO_PhieuThue.timPT(ten);
		modelDSP.setRowCount(0);
		for (PhieuThue pt : list) {
			modelDSP.addRow(new Object[] {
					pt.getMaPT(),
					pt.getHoaDon().getMaHD(),
					pt.getPhong().getMaPhong(),
					getTenPhong(pt.getPhong().getMaPhong()),
					getTenLP(pt.getPhong().getLoaiPhong().getMaLP()),
					getTenKH(pt.getHoaDon().getKhachHang().getMaKH()),
//					getCMND(pt.getHoaDon().getKhachHang().getMaKH()),
//					dinhDangTienTe(getGiaLP(hdp.getPhong().getLoaiPhong().getMaLP())),
					new SimpleDateFormat("dd-MM-yyyy hh:mm:ss").format(new Date(pt.getNgayDatPhong().getTime()))
				});}
    }
    private void btnTimActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTimActionPerformed
        // TODO add your handling code here:
    	
    	String ten = txtTim.getText().replaceAll("\\s\\s+", " ").trim();
    	timKH(ten);
    	
    }//GEN-LAST:event_btnTimActionPerformed

    private void btnQuayLaiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnQuayLaiActionPerformed
        // TODO add your handling code here:
//    	GD_Chinh ui_Chinh = new GD_Chinh();
        this.setVisible(false);
    	
    }//GEN-LAST:event_btnQuayLaiActionPerformed

    public void thanhToan() throws Exception, HeadlessException{
    	String maHD;
    	double tongThanhTien = 0;
    	double tienPhong=0, tienDV, tienCoc;
    	double sumTienPhong = 0;
    	double sumTienDV = 0;
    	double sumTienCoc = 0;
    	//double thueVAT = 0;
    	int soNgay;
    	Timestamp ngayLapHD = new Timestamp(System.currentTimeMillis());
    	Timestamp ngayDat,ngayTra;
    	
//    	int soDV = 0;
    	
    	int i = tblDSPD.getSelectedRow();
    	
    	HoaDon hd = new HoaDon(String.valueOf(tblDSPD.getValueAt(i, 1)));
    	
    	PhieuThue phieuThue = new PhieuThue(Integer.parseInt(String.valueOf(tblDSPD.getValueAt(i, 0).toString())));
    	
    	ArrayList<PhieuThue> listPT = DAO_PhieuThue.getAllPhieuThueChuaThanhToanTheoMaPT(phieuThue.getMaPT());
    		
    		for(PhieuThue hdp: listPT) {

    			capNhatNgayTraPhong(hdp.getMaPT());
    			
        		NumberFormat numf = NumberFormat.getNumberInstance();
                numf.setMaximumFractionDigits(1);
                ngayDat = hdp.getNgayDatPhong();
                
            	System.out.println(ngayDat);
            	ngayTra = new Timestamp(System.currentTimeMillis());
                double s =(double)(ngayTra.getTime()-ngayDat.getTime())/(60*60*1000);
                soNgay =(int) (Math.ceil(s/24));
                if(soNgay<=0)
               	 soNgay +=1;
//                soNgay = hdp.tinhNgay();
//                tienPhong = Double.parseDouble(txtTienPhong.getText());
                tienPhong =  soNgay*getGiaLP(hdp.getPhong().getLoaiPhong().getMaLP());
//        		tienPhong = Double.valueOf(txtTienPhong.getText());
        		tienCoc = hdp.getTienCoc();
        		sumTienPhong += tienPhong;
        		sumTienCoc += tienCoc;
        		
        		PhieuThue hdPhieuThue = new PhieuThue(hdp.getMaPT(),hdp.getPhong(),hdp.getHoaDon(), hdp.getNgayDatPhong(),ngayTra, tienPhong, tienCoc);
        		DAO_PhieuThue.capNhatPhieuThue(hdPhieuThue);
        		
        		ArrayList<DichVuSuDung> listDVSD = DAO_DichVuSuDung.getAllHDDV(hdp.getMaPT());
                for(DichVuSuDung dvsd: listDVSD) {
                	int maHDDV = dvsd.getMaHDDV();
                	tienDV = dvsd.getSoLuong()*getGiaDV(dvsd.getDichVu().getMaDV());
                	DichVuSuDung hdDichVu = new DichVuSuDung(maHDDV,dvsd.getPhieuThue(),dvsd.getDichVu(),dvsd.getSoLuong(),dvsd.getGioDatDV(), tienDV);
                	DAO_DichVuSuDung.capNhatTienDV(hdDichVu);
                	sumTienDV += tienDV;
                }
        		
        	}	
    	if(sumTienCoc - (sumTienDV+sumTienPhong)>0) {

    		tongThanhTien = sumTienCoc - (sumTienCoc - (sumTienDV+sumTienPhong));
    	}
    	else {
    		tongThanhTien = sumTienDV+sumTienPhong - sumTienCoc;
    	}
    	
    	NhanVien nv = DAO_NhanVien.getNhanVienDangLogin();
    	
		String maNV = nv.getMaNV();
		maHD = hd.getMaHD();
		
    	HoaDon hdNew = new HoaDon(maHD,new NhanVien(maNV),null, ngayLapHD,tongThanhTien,true);
    	
    	int result = JOptionPane.showConfirmDialog(rootPane,
                "Bạn có chắc muốn thanh toán hóa đơn này!",
                "Xác nhận",
                JOptionPane.YES_NO_OPTION,
                JOptionPane.WARNING_MESSAGE);
        if (result == JOptionPane.YES_OPTION) {
        	if(!DAO_HoaDon.capNhatHD(hdNew))
        		JOptionPane.showMessageDialog(rootPane, "Thanh toán thất bại!");
        	capNhatPhongTrong(hd.getMaHD());
        	inHoaDon();
        	
        } else if (result == JOptionPane.NO_OPTION) {
        	JOptionPane.showMessageDialog(rootPane, "Đã hủy thao tác thanh toán!");
        }
    }
    
   

	public void inHoaDon(){
    	
		PrinterJob pj = PrinterJob.getPrinterJob();
    	pj.setPrintable(new BillPrintable(),getPageFormat(pj));
    	
    	int a =JOptionPane.showConfirmDialog(null, "Bạn có muốn in hóa đơn không?","Xác nhận",JOptionPane.YES_NO_OPTION);
    	if(a == 0) {
    		try {
    			pj.print();
    		} catch (Exception e) {
    			// TODO: handle exception
    			e.printStackTrace();
    		}
    	}
    };
    
    public void capNhatPhongTrong(String ma) throws Exception {
    	ArrayList<PhieuThue> list = DAO_PhieuThue.getAllPhieuThueTheoMaHD(ma);
    	for (PhieuThue hdp : list) {
    		
    		DAO_Phong.capNhatTinhTrangPhongTrong(new Phong(hdp.getPhong().getMaPhong()));
		}
    }
    
    
    public void setGiaTriMacDinh() {
    	modelDSP.setRowCount(0);
    	
    	txtMaHD.setText("");
    	txtMaPhong.setText("");
    	txtTenPhong.setText("");
    	txtLoaiPhong.setText("");
    	txtTenKH.setText("");
    	txtTenNV.setText("");
    	txtTienCoc.setText("");
    	txtNgayLapHD.setText("");
    	txtNgayNhanPhong.setText("");
    	txtNgayTraPhong.setText("");
    	txtSoNgayThue.setText("");
    	txtTienPhong.setText("");
    	txtSoLuongDV.setText("");
    	txtTienDV.setText("");
    	txtTongThanhTien.setText("");
    	txtTienKhachTra.setText("");
    	txtTienThua.setText("");	
    }
    
    private void btnThanhToanActionPerformed(java.awt.event.ActionEvent evt) throws Exception, HeadlessException{//GEN-FIRST:event_btnThanhToanActionPerformed
        // TODO add your handling code here:
    	thanhToan();
    	setGiaTriMacDinh();
    	DocDuLieuDatabaseVaoTableDSP();
    	
    }//GEN-LAST:event_btnThanhToanActionPerformed

    public boolean tinhTienThua() {
    	double tongThanhTien = 0;
    	double tienPhong = 0;
    	double tienDV = 0, tienCoc = 0;
    	Timestamp ngayDat,ngayTra;
    	int soNgay;
    	if(txtTienKhachTra.getText().equalsIgnoreCase("")) {
    		JOptionPane.showMessageDialog(rootPane, "Chưa nhập tiền khách trả!");
    		return false;
    	}
    	
    	double tienTra = Double.parseDouble(txtTienKhachTra.getText());
    	
    	// Load hóa đơn chưa thanh toán
		int i = tblDSPD.getSelectedRow();
		
		PhieuThue pt = new PhieuThue(Integer.parseInt(String.valueOf(tblDSPD.getValueAt(i, 0))));
		
		// Tính tổng thành tiền của hóa đơn
		ArrayList<PhieuThue> lstHDP = DAO_PhieuThue.getAllPhieuThueChuaThanhToanTheoMaPT(pt.getMaPT());
		for (PhieuThue hdp : lstHDP) {
			NumberFormat numf = NumberFormat.getNumberInstance();
            numf.setMaximumFractionDigits(1);
            ngayDat = hdp.getNgayDatPhong();
            
        	System.out.println(ngayDat);
        	ngayTra = new Timestamp(System.currentTimeMillis());
            double s =(double)(ngayTra.getTime()-ngayDat.getTime())/(60*60*1000);
            soNgay =(int) (Math.ceil(s/24));
            if(soNgay<=0)
           	 soNgay +=1;
			tienPhong += soNgay*getGiaLP(hdp.getPhong().getLoaiPhong().getMaLP());
			ArrayList<DichVuSuDung> lstHDDV = DAO_DichVuSuDung.getAllHDDV(pt.getMaPT());
			for (DichVuSuDung hddv : lstHDDV) {
				tienDV += hddv.getSoLuong()*getGiaDV(hddv.getDichVu().getMaDV());
			}
			tienCoc += hdp.getTienCoc();
		}
		
		tongThanhTien = (1)*(tienPhong + tienDV - tienCoc);
		
		txtTienThua.setText(dinhDangTienTe(tienTra-tongThanhTien));
		return true;
    }
    
    private void btnTinhTienThuaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTinhTienThuaActionPerformed
        // TODO add your handling code here:
    	tinhTienThua();
    }//GEN-LAST:event_btnTinhTienThuaActionPerformed

    
    
    private void btnTinhSoNgayThueActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTinhSoNgayThueActionPerformed
        // TODO add your handling code here:
    	TinhTongTienPhongVaDichVu();
    }//GEN-LAST:event_btnTinhSoNgayThueActionPerformed

    private void txtTenNVActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtTenNVActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtTenNVActionPerformed

    public PageFormat getPageFormat(PrinterJob pj) 
    {
    	PageFormat pf = pj.defaultPage();
    	Paper paper = pf.getPaper();
    	
    	double bHeight =25.0;
    	double bodyHeight = bHeight;
    	double headerHeight = 5.0;
    	double footerHeight = 5.0;
    	double width = cm_to_pp(8);
    	double height = cm_to_pp(headerHeight+bodyHeight+footerHeight);
    	paper.setSize(width, height);
    	paper.setImageableArea(0, 10, width, height - cm_to_pp(1));
    	
    	pf.setOrientation(PageFormat.PORTRAIT);
    	pf.setPaper(paper);
    	
    	return pf;
    }
    
    protected static double cm_to_pp(double cm) {
    	return toPPI(cm * 0.393600787);
    }
    protected static double toPPI (double inch) {
		return inch * 72d;
	}
    
    public class BillPrintable implements Printable{
    	
//    	int r = itemName.size(): ArrayList of itemName
    	
    	public int print(Graphics graphics, PageFormat pageFormat, int pageIndex) {
    		int result = NO_SUCH_PAGE;
    		if(pageIndex == 0) {
    			Graphics2D g2d = (Graphics2D) graphics;
//    			double width = pageFormat.getImageableWidth();
    			g2d.translate((int) pageFormat.getImageableX(),(int) pageFormat.getImageableY());
    			
    			try {
    				int y=20;
    				int yShift = 12;
    				int headerRectHeight=15;
    				
    				g2d.setFont(new java.awt.Font("Times New Roman", Font.NORMAL, 9));
    				g2d.drawString("",12,y);y+=yShift;
    				g2d.drawString("",12,y);y+=yShift;
    				g2d.drawString("                                HV HOTELS             ", 12, y);y+=yShift;
    				g2d.drawString("         Số 12 đường nguyễn văn bảo, gò vấp,TP.HCM", 12, y);y+=yShift;
    				g2d.drawString("                          www.hvhotels.com.vn", 12, y);y+=yShift;
    				g2d.drawString("                             +84948546390", 12, y);y+=yShift;
    				g2d.drawString("--------------------------------------------------------------------------", 12, y);y+=headerRectHeight;
    				g2d.drawString("Số hóa đơn: "+txtMaHD.getText(), 12, y);y+=yShift;
    				g2d.drawString("Ngày Lập HĐ: "+txtNgayLapHD.getText(), 12, y);y+=yShift;
    				g2d.drawString("Tên khách: "+txtTenKH.getText(), 12, y);y+=yShift;
    				g2d.drawString("Nhân viên thanh toán: "+txtTenNV.getText(), 12, y);y+=yShift;
    				g2d.drawString("--------------------------------------------------------------------------", 12, y);y+=headerRectHeight;
    				g2d.drawString(" Số Phòng                            Giá Phòng             ", 12, y);y+=yShift;
    				
    				int i = tblDSPD.getSelectedRow();
    				
    				PhieuThue phieuThue = new PhieuThue(Integer.parseInt(String.valueOf(tblDSPD.getValueAt(i,0).toString())));
    				ArrayList<PhieuThue> listPT = DAO_PhieuThue.getAllPhieuThueChuaThanhToanTheoMaPT(phieuThue.getMaPT());
    				for(PhieuThue pt: listPT) {
    					g2d.drawString("   "+getTenPhong(pt.getPhong().getMaPhong())+"                                       "+getGiaLP(pt.getPhong().getLoaiPhong().getMaLP())+"", 12, y);y+=yShift;
    				}
    				
    				ArrayList<DichVuSuDung> listDVSD = DAO_DichVuSuDung.getAllHDDV(phieuThue.getMaPT());
    				g2d.drawString("--------------------------------------------------------------------------", 12, y);y+=headerRectHeight;
    				g2d.drawString(" Tên Dịch vụ                                 Giá Dịch vụ             ", 12, y);y+=yShift;
    				
    				for(DichVuSuDung dvsd: listDVSD) {
    					double giaDV;
    					giaDV = dvsd.getSoLuong()*getGiaDV(dvsd.getDichVu().getMaDV());
    					g2d.drawString("   "+getTenDV(dvsd.getDichVu().getMaDV())+"   ",10,y);y+=yShift;
    					g2d.drawString("         "+getGiaDV(dvsd.getDichVu().getMaDV())+" * "+dvsd.getSoLuong(),10,y);
    					g2d.drawString(""+giaDV+"", 140, y);y+=yShift;
    				}
    				
    				g2d.drawString("--------------------------------------------------------------------------", 12, y);y+=yShift;
    				g2d.drawString("    Tổng tiền phải trả: "+txtTongThanhTien.getText()+" ", 10, y);y+=yShift;
    				g2d.drawString("    Tiền cọc: "+txtTienCoc.getText()+" ", 10, y);y+=yShift;
    				g2d.drawString("    Tiền khách trả: "+txtTienKhachTra.getText()+" ", 10, y);y+=yShift;
    				g2d.drawString("    Tiền thừa: "+txtTienThua.getText()+" ", 10, y);y+=yShift;
    				
    				g2d.drawString("--------------------------------------------------------------------------", 12, y);y+=yShift;
    				g2d.drawString("  Cám ơn bạn đã tin tưởng và sử dụng dịch vụ của chúng tôi", 10, y);y+=headerRectHeight;
    				g2d.drawString("    Thông tin liên hệ:hvhotels@gmail.com | +84948546390", 10, y);y+=headerRectHeight;
    				g2d.drawString("                Hân hạnh được phục vụ bạn lần sau!!!", 10, y);y+=headerRectHeight;
    			}catch(Exception e){
    				e.printStackTrace();
    			}
    			result = PAGE_EXISTS;
    		}
    		
    		return result;
    	}
    	
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(GD_TraPhong.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(GD_TraPhong.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(GD_TraPhong.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(GD_TraPhong.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new GD_TraPhong().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnLamMoi;
    private javax.swing.JButton btnQuayLai;
    private javax.swing.JButton btnThanhToan;
    private javax.swing.JButton btnTim;
    private javax.swing.JButton btnTinhSoNgayThue;
    private javax.swing.JButton btnTinhTienThua;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JRadioButtonMenuItem jRadioButtonMenuItem1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JLabel lblDSHD;
    private javax.swing.JPanel pnlDSHD;
    private javax.swing.JPanel pnlHDP;
    private javax.swing.JScrollPane scrollDSPD;
    private javax.swing.JTable tblDSPD;
    private javax.swing.JTextField txtLoaiPhong;
    private javax.swing.JTextField txtMaHD;
    private javax.swing.JTextField txtMaPhong;
    private javax.swing.JTextField txtNgayLapHD;
    private javax.swing.JTextField txtNgayNhanPhong;
    private javax.swing.JTextField txtNgayTraPhong;
    private javax.swing.JTextField txtSoLuongDV;
    private javax.swing.JTextField txtSoNgayThue;
    private javax.swing.JTextField txtTenKH;
    private javax.swing.JTextField txtTenNV;
    private javax.swing.JTextField txtTenPhong;
    private javax.swing.JTextField txtTienCoc;
    private javax.swing.JTextField txtTienDV;
    private javax.swing.JTextField txtTienKhachTra;
    private javax.swing.JTextField txtTienPhong;
    private javax.swing.JTextField txtTienThua;
    private javax.swing.JTextField txtTim;
    private javax.swing.JTextField txtTongThanhTien;
    // End of variables declaration//GEN-END:variables
}
