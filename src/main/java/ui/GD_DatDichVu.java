/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package ui;

import java.sql.Date;
import java.sql.Timestamp;
import java.text.NumberFormat;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Locale;

import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

import dao.DAO_DichVu;
import dao.DAO_DichVuSuDung;
import dao.DAO_DonVi;
import dao.DAO_KhachHang;
import dao.DAO_LoaiDichVu;
import dao.DAO_PhieuThue;
import dao.DAO_Phong;
import entity.DichVu;
import entity.DichVuSuDung;
import entity.DonVi;
import entity.KhachHang;
import entity.LoaiDichVu;
import entity.PhieuThue;
import entity.Phong;

/**
 *
 * @author admin
 */
public class GD_DatDichVu extends javax.swing.JFrame {

    /**
	 * 
	 */
	private static final long serialVersionUID = 1L;

	/**
     * Creates new form GD_DichVu
     */
    public GD_DatDichVu() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    
    private DefaultTableModel modelDSDV, modelDSPhongDat, modelDSDVDat;
//    private String[] colsDSDV={"Mã DV", "Tên dịch vụ","Loại dịch vụ", "Giá", "Số lượng","Đơn vị tính"};
//    private String[] colsDSPhongDat={"Mã PT", "Số phòng","Tên Khách"};
//    private String[] colsDSDVDat={"Tên dịch vụ", "Giá DV", "Số lượng","Đơn vị Tính", "Thành tiền", "Ngày đặt"};
    
    public void DocDuLieuDatabaseVaoTableDSDV() {
		ArrayList<DichVu> lstDV = DAO_DichVu.getAllDichVu();
		for (DichVu dv : lstDV) {
			modelDSDV.addRow(new Object[] {
					dv.getMaDV(),
					dv.getTenDV(),
					getTenLoaiDV(dv.getLoaiDichVu().getMaLoaiDichVu()),
					dinhDangTienTe(getGiaDV(dv.getMaDV())),
					dv.getSoLuongTon(),
					getTenDonVi(dv.getDonVi().getMaDonVi())});}
		
    }
    
    public void DocDuLieuDatabaseVaoTableDSPhongDat() {
		ArrayList<PhieuThue> list = DAO_PhieuThue.getAllHoaDonPhongChuaThanhToan();
		for (PhieuThue hdp : list) {
			modelDSPhongDat.addRow(new Object[] {
					hdp.getMaPT(),
					getTenPhong(hdp.getPhong().getMaPhong()),
					getTenKH(hdp.getHoaDon().getKhachHang().getMaKH())
			});}
    }
    
    
    public void DocDuLieuDatabaseVaoTableDSDVDat() {
    	int i = tblDSP.getSelectedRow();
    	
    	try {
    		PhieuThue pt = new PhieuThue(Integer.parseInt(tblDSP.getValueAt(i, 0).toString()));
    		
        	ArrayList<DichVuSuDung> list = DAO_DichVuSuDung.getAllHDDV(pt.getMaPT());
        		
        		for (DichVuSuDung dv : list) {
        			modelDSDVDat.addRow(new Object[] {
        				getTenDV(dv.getDichVu().getMaDV()),
        				dinhDangTienTe(getGiaDV(dv.getDichVu().getMaDV())),
        				dv.getSoLuong(),
        				getTenDonVi(dv.getDichVu().getDonVi().getMaDonVi()),
        				dinhDangTienTe(dv.getSoLuong()*getGiaDV(dv.getDichVu().getMaDV())),
        				new SimpleDateFormat("dd-MM-yyyy hh:mm:ss a").format(new Date(dv.getGioDatDV().getTime())),
        				
        			});
        		}
        	
		} catch (Exception e) {
			// TODO: handle exception
		}
    	
		
    }
    public String dinhDangTienTe(double tien) {
    	Locale localeVN = new Locale("vi", "VN");
	    NumberFormat currencyVN = NumberFormat.getCurrencyInstance(localeVN);
    	return currencyVN.format(tien);
    }
    
   
    
    public String getTenPhong(String maPhong) {
    	ArrayList<Phong> listPhong = DAO_Phong.getAllPhong();
    	for (Phong p : listPhong) {
    		if(p.getMaPhong().equalsIgnoreCase(maPhong))
    			return p.getTenPhong();
    	}
    	return "";
    }
    
    public String getTenDV(String maDV) {
    	ArrayList<DichVu> listDV = DAO_DichVu.getAllDichVu();
    	for (DichVu dv : listDV) {
    		if(dv.getMaDV().equalsIgnoreCase(maDV))
    			return dv.getTenDV();
    	}
    	return "";
    }
    
    public String getTenLoaiDV(String maLDV) {
    	ArrayList<LoaiDichVu> list = DAO_LoaiDichVu.getAllLoaiDV();
    	for (LoaiDichVu ldv : list) {
    		if(ldv.getMaLoaiDichVu().equalsIgnoreCase(maLDV))
    			return ldv.getTenLoaiDichVu();
    	}
    	return "";
    }
    
    public String getTenDonVi(String maDonVi) {
    	ArrayList<DonVi> list = DAO_DonVi.getAllDonVi();
    	for (DonVi dv : list) {
    		if(dv.getMaDonVi().equalsIgnoreCase(maDonVi))
    			return dv.getTenDonVi();
    	}
    	return "";
    }
    
    public String getTenKH(String maKH) {
    	ArrayList<KhachHang> list = DAO_KhachHang.getAllKhachHang();
    	for (KhachHang kh : list) {
    		if(kh.getMaKH().equalsIgnoreCase(maKH))
    			return kh.getTenKH();
    	}
    	return "";
    }
    
//    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        jPanel4 = new javax.swing.JPanel();
        scrollDSDV = new javax.swing.JScrollPane();
        tblDSDV = new javax.swing.JTable();
        jLabel2 = new javax.swing.JLabel();
        btnTimDV = new javax.swing.JButton();
        txtTimDV = new javax.swing.JTextField();
        btnLamMoi = new javax.swing.JButton();
        jPanel5 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        scrollDSP = new javax.swing.JScrollPane();
        tblDSP = new javax.swing.JTable();
        btnLamMoiPhong = new javax.swing.JButton();
        txtTimPhong = new javax.swing.JTextField();
        btnTimPhong = new javax.swing.JButton();
        jPanel6 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        txtSoLuong = new javax.swing.JTextField();
        btnDatDichVu = new javax.swing.JButton();
        scrollDSDVDat = new javax.swing.JScrollPane();
        tblDSDVDat = new javax.swing.JTable();
        btnHuy = new javax.swing.JButton();
        btnGiam = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setUndecorated(true);
        setResizable(false);

        jPanel1.setBackground(new java.awt.Color(102, 204, 255));

        jPanel2.setBackground(new java.awt.Color(102, 204, 255));

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 36)); // NOI18N
        jLabel1.setText("DỊCH VỤ");

        jLabel5.setFont(new java.awt.Font("Segoe UI", 1, 36)); // NOI18N
        jLabel5.setText("X");
        jLabel5.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jLabel5.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel5MouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addGap(456, 456, 456)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel5)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(10, 10, 10))))
        );

        jPanel3.setBackground(new java.awt.Color(102, 204, 255));

        jPanel4.setBackground(new java.awt.Color(153, 255, 255));

        
        scrollDSDV.setViewportView(tblDSDV);
        if (tblDSDV.getColumnModel().getColumnCount() > 0) {
            tblDSDV.getColumnModel().getColumn(0).setResizable(false);
            tblDSDV.getColumnModel().getColumn(1).setResizable(false);
            tblDSDV.getColumnModel().getColumn(2).setResizable(false);
            tblDSDV.getColumnModel().getColumn(3).setResizable(false);
            tblDSDV.getColumnModel().getColumn(4).setResizable(false);
            tblDSDV.getColumnModel().getColumn(5).setResizable(false);
        }

        jLabel2.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("DANH SÁCH DỊCH VỤ");

        btnTimDV.setBackground(new java.awt.Color(204, 204, 255));
        btnTimDV.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        btnTimDV.setIcon(new javax.swing.ImageIcon("C:\\hotels (4)\\hotels\\src\\main\\java\\images\\ic_search.png")); // NOI18N
        btnTimDV.setText("TÌM");
        btnTimDV.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnTimDV.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTimDVActionPerformed(evt);
            }
        });

        btnLamMoi.setBackground(new java.awt.Color(204, 204, 255));
        btnLamMoi.setIcon(new javax.swing.ImageIcon("C:\\hotels (4)\\hotels\\src\\main\\java\\images\\ic_refresh.png")); // NOI18N
        btnLamMoi.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnLamMoi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLamMoiActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(btnLamMoi, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtTimDV, javax.swing.GroupLayout.PREFERRED_SIZE, 385, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btnTimDV, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(scrollDSDV, javax.swing.GroupLayout.DEFAULT_SIZE, 616, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(btnLamMoi, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(txtTimDV)
                    .addComponent(btnTimDV, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(scrollDSDV)
                .addContainerGap())
        );

        jPanel5.setBackground(new java.awt.Color(153, 255, 255));

        jLabel3.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel3.setText("DANH SÁCH PHÒNG");

       
        scrollDSP.setViewportView(tblDSP);
        if (tblDSP.getColumnModel().getColumnCount() > 0) {
            tblDSP.getColumnModel().getColumn(0).setResizable(false);
            tblDSP.getColumnModel().getColumn(1).setResizable(false);
            tblDSP.getColumnModel().getColumn(2).setResizable(false);
        }

        btnLamMoiPhong.setBackground(new java.awt.Color(204, 204, 255));
        btnLamMoiPhong.setIcon(new javax.swing.ImageIcon("C:\\hotels (4)\\hotels\\src\\main\\java\\images\\ic_refresh.png")); // NOI18N
        btnLamMoiPhong.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnLamMoiPhong.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLamMoiPhongActionPerformed(evt);
            }
        });

        btnTimPhong.setBackground(new java.awt.Color(204, 204, 255));
        btnTimPhong.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        btnTimPhong.setIcon(new javax.swing.ImageIcon("C:\\hotels (4)\\hotels\\src\\main\\java\\images\\ic_search.png")); // NOI18N
        btnTimPhong.setText("TÌM");
        btnTimPhong.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnTimPhong.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTimPhongActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, 531, Short.MAX_VALUE)
                        .addContainerGap())
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addComponent(btnLamMoiPhong, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtTimPhong, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btnTimPhong, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(14, 14, 14))))
            .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel5Layout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(scrollDSP, javax.swing.GroupLayout.DEFAULT_SIZE, 531, Short.MAX_VALUE)
                    .addContainerGap()))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnLamMoiPhong, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(txtTimPhong)
                    .addComponent(btnTimPhong, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addGap(204, 204, 204))
            .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                    .addContainerGap(90, Short.MAX_VALUE)
                    .addComponent(scrollDSP, javax.swing.GroupLayout.PREFERRED_SIZE, 189, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap()))
        );

        jPanel6.setBackground(new java.awt.Color(153, 255, 255));

        jLabel4.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel4.setText("Số Lượng:");

        btnDatDichVu.setBackground(new java.awt.Color(204, 255, 204));
        btnDatDichVu.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btnDatDichVu.setText("ĐẶT DỊCH VỤ");
        btnDatDichVu.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnDatDichVu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                try {
					btnDatDichVuActionPerformed(evt);
				} catch (Exception e) {
					// TODO Auto-generated catch block
					e.printStackTrace();
				}
            }
        });

        
        scrollDSDVDat.setViewportView(tblDSDVDat);
        if (tblDSDVDat.getColumnModel().getColumnCount() > 0) {
            tblDSDVDat.getColumnModel().getColumn(0).setResizable(false);
            tblDSDVDat.getColumnModel().getColumn(1).setResizable(false);
            tblDSDVDat.getColumnModel().getColumn(2).setResizable(false);
            tblDSDVDat.getColumnModel().getColumn(3).setResizable(false);
            tblDSDVDat.getColumnModel().getColumn(4).setResizable(false);
        }

        btnHuy.setBackground(new java.awt.Color(255, 153, 153));
        btnHuy.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btnHuy.setText("HUỶ DỊCH VỤ");
        btnHuy.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnHuy.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                try {
					btnHuyActionPerformed(evt);
				} catch (Exception e) {
					// TODO Auto-generated catch block
					e.printStackTrace();
				}
            }
        });

        btnGiam.setBackground(new java.awt.Color(255, 204, 204));
        btnGiam.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btnGiam.setText("GIẢM");
        btnGiam.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnGiam.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                try {
					btnGiamActionPerformed(evt);
				} catch (Exception e) {
					// TODO Auto-generated catch block
					e.printStackTrace();
				}
            }
        });

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addComponent(jLabel4)
                        .addGap(18, 18, 18)
                        .addComponent(txtSoLuong, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnDatDichVu, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btnGiam, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(scrollDSDVDat, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 531, Short.MAX_VALUE))
                .addContainerGap())
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addGap(195, 195, 195)
                .addComponent(btnHuy, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtSoLuong, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4)
                    .addComponent(btnDatDichVu, javax.swing.GroupLayout.DEFAULT_SIZE, 32, Short.MAX_VALUE)
                    .addComponent(btnGiam, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(scrollDSDVDat, javax.swing.GroupLayout.PREFERRED_SIZE, 154, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnHuy, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
        setLocationRelativeTo(null);

    }// </editor-fold>//GEN-END:initComponents


    
   
    public void timDV(String ten) {
		ArrayList<DichVu> lstDV = DAO_DichVu.timDVTrongTableThemDV(ten);
		for (DichVu dv : lstDV) {
			modelDSDV.addRow(new Object[] {
					dv.getMaDV(),
					dv.getTenDV(),
					getTenLoaiDV(dv.getLoaiDichVu().getMaLoaiDichVu()),
					dinhDangTienTe(getGiaDV(dv.getMaDV())),
					dv.getSoLuongTon(),
					getTenDonVi(dv.getDonVi().getMaDonVi())});}
    }
    
    private void btnTimDVActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTimDVActionPerformed
        // TODO add your handling code here:
        String ten = txtTimDV.getText().replaceAll("\\s\\s+", " ").trim();
        modelDSDV.setRowCount(0);
        timDV(ten);
    }//GEN-LAST:event_btnTimDVActionPerformed
    
    public void taiLaiDSDV() {
    	modelDSDV.setRowCount(0);
    	DocDuLieuDatabaseVaoTableDSDV();
    	modelDSPhongDat.setRowCount(0);
    	DocDuLieuDatabaseVaoTableDSPhongDat();
    	txtTimDV.setText("");
    	txtTimDV.requestFocus();
    	txtTimPhong.setText("");
    	txtTimPhong.requestFocus();
    }
    
    public void taiLaiDSDVDat() {
    	modelDSDVDat.setRowCount(0);
    	DocDuLieuDatabaseVaoTableDSDVDat();
    }
    private void btnLamMoiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLamMoiActionPerformed
        // TODO add your handling code here:
        taiLaiDSDV();

    }//GEN-LAST:event_btnLamMoiActionPerformed
    
    public double getGiaDV(String maDV) {
    	ArrayList<DichVu> listDV = DAO_DichVu.getAllDichVu();
    	for (DichVu dv : listDV) {
    		if(dv.getMaDV().equalsIgnoreCase(maDV)) {
//    			BigDecimal giaLP = new BigDecimal(lp.getGiaLP()).setScale(0, BigDecimal.ROUND_HALF_UP);
    			return dv.getGiaDV();
    		}
    	}
    	return 0;
    }
    public boolean datDV() throws Exception {
    	String maDV;
    	int maPT;
    	int soLuong, slt;
//    	double tienDV= 0;
    	int i = tblDSP.getSelectedRow();
    	int j = tblDSDV.getSelectedRow();
    	Timestamp gioDatDV = new Timestamp(System.currentTimeMillis());
    	
    	if(j!=-1) {
    		if(i!=-1) {
    			maPT = Integer.parseInt(String.valueOf(tblDSP.getValueAt(i, 0)));
//    			maHD = String.valueOf(tblDSP.getValueAt(selectItemRoom, 0));
//    	    	maPhong = String.valueOf(tblDSP.getValueAt(selectItemRoom, 1));
    	    	maDV = String.valueOf(tblDSDV.getValueAt(j, 0));
    	    	slt = Integer.parseInt(String.valueOf(tblDSDV.getValueAt(j, 4)));
    	    	
    	    	if(txtSoLuong.getText().equalsIgnoreCase("")) {
    	    		JOptionPane.showMessageDialog(rootPane, "Chưa nhập số lượng!", "Lỗi!", JOptionPane.WARNING_MESSAGE);
    	    		txtSoLuong.setText("");
    	    		txtSoLuong.requestFocus();
    	    		  return false;
    	    	}
    	    	 	
    	    	try {
    	    		soLuong = Integer.parseInt(txtSoLuong.getText());
    	    		if(soLuong > slt) {
        	    		JOptionPane.showMessageDialog(rootPane, "Số lượng muốn đặt không được vượt quá số lượng tồn kho!");
        	    		return false;
        	    	}
    	    		if(soLuong<=0) {
        	    		JOptionPane.showMessageDialog(rootPane, "Số lượng muốn đặt phải lớn hơn 0!");
        	    		return false;
    	    		}
    	    		
//    	    		ArrayList<DichVuSuDung> dsHDDV = DAO_DichVuSuDung.getAllDichVuTheoPTvaDV(new PhieuThue(maPT),new DichVu(maDV));
    	    		
    	    		DichVuSuDung dvsd = new DichVuSuDung(new PhieuThue(maPT), new DichVu(maDV), soLuong, gioDatDV);
//    	    		DAO_DichVuSuDung.themDVSD(dvsd);
//    	    		DAO_DichVu.capNhatSoLuongTon(maDV, slt-soLuong);
    	    		
        	    	
            	    	if(!DAO_DichVuSuDung.themDVSD(dvsd))
            	        		return false;
            	    	
            	        if(!DAO_DichVu.capNhatSoLuongTon(maDV, slt-soLuong))
            	        		return false;
        	    
//        	    	else {
//        	    		if(!DAO_DichVuSuDung.themDVSD(dvsd))
//        	        		return false;
//        	    		if(!DAO_DichVu.capNhatSoLuongTon(maDV, slt-soLuong))
//        	        		return false;
//        	    	}

    			} catch (Exception e) {
    				JOptionPane.showMessageDialog(rootPane, "Số lượng không hợp lệ!", "Lỗi!", JOptionPane.WARNING_MESSAGE);
    				return false;
    			}
//    	    	else {
//    	    		//JOptionPane.showMessageDialog(rootPane, "Dịch vụ đã có trong hóa đơn! \nHãy cập nhật lại số lượng!");
//    	    		for (HoaDonDichVu hoaDonDichVu : dsHDDV) {
//    	    			int soLuongNew = hoaDonDichVu.getSoLuong() + soLuong;
//    	    			HoaDonDichVu hdDichVu = new HoaDonDichVu(hoaDonDichVu.getHoaDon(), hoaDonDichVu.getDichVu(),
//    	    							hoaDonDichVu.getPhong(), soLuongNew, gioDatDV);
//						DAO_HoaDonDichVu.capNhatHDDV(hdDichVu);
//					}
//    	    		if(!DAO_DichVu.capNhatSoLuongTon(maDV, slt-soLuong))
//    	        		return false;
//    	    	}
    	    	JOptionPane.showMessageDialog(rootPane, "Đặt dịch vụ thành công!");
	        	txtSoLuong.setText("");
	        	modelDSDVDat.setRowCount(0);
	        	DocDuLieuDatabaseVaoTableDSDVDat();
	        	modelDSDV.setRowCount(0);
	        	DocDuLieuDatabaseVaoTableDSDV();
    		}
    		else {
	    		JOptionPane.showMessageDialog(rootPane, "Chưa chọn phòng!", "Lỗi", JOptionPane.WARNING_MESSAGE);
	    	}
    	}
    	else {
    		JOptionPane.showMessageDialog(rootPane, "Chưa chọn dịch vụ!", "Lỗi", JOptionPane.WARNING_MESSAGE);
    	}
    	return true;
    }
    private void btnDatDichVuActionPerformed(java.awt.event.ActionEvent evt) throws Exception {//GEN-FIRST:event_btnDatDichVuActionPerformed
        // TODO add your handling code here:
    	datDV();
    }//GEN-LAST:event_btnDatDichVuActionPerformed
    
    public boolean huyDatDV() throws NumberFormatException, Exception {
    	String maDV;
    	int maPT;
    	Timestamp gioDatDV;
    	int i = tblDSP.getSelectedRow();
    	int j = tblDSDVDat.getSelectedRow();
    	
    	if(i!=-1) {
//    		maHD = String.valueOf(tblDSP.getValueAt(i, 0));
//        	maPhong = String.valueOf(tblDSP.getValueAt(i, 1));
        	maPT = Integer.parseInt(String.valueOf(tblDSP.getValueAt(i, 0).toString()));
        	ArrayList<DichVuSuDung> listHDDV = DAO_DichVuSuDung.getAllHDDV(maPT);
        	if(j!=-1) {
        		DichVuSuDung hDichVu = listHDDV.get(j);
            	
            	maDV = hDichVu.getDichVu().getMaDV();
            	gioDatDV = hDichVu.getGioDatDV();
            	DichVuSuDung hddv = new DichVuSuDung(new PhieuThue(maPT), new DichVu(maDV), gioDatDV);
            	if(!DAO_DichVuSuDung.huyDatDV(hddv)) {
            		return false;
            	}
            	
            	ArrayList<DichVu> listDV = DAO_DichVu.timDV(maDV);
            	for (DichVu dichVu : listDV) {
        			DAO_DichVu.capNhatSoLuongTon(maDV, dichVu.getSoLuongTon()+Integer.parseInt(String.valueOf(tblDSDVDat.getValueAt(j, 2))));
        		}
            	JOptionPane.showMessageDialog(rootPane, "Hủy dịch vụ thành công!");
            	modelDSDVDat.setRowCount(0);
            	DocDuLieuDatabaseVaoTableDSDVDat();
            	modelDSDV.setRowCount(0);
            	DocDuLieuDatabaseVaoTableDSDV();
        	}
        	else
        		JOptionPane.showMessageDialog(rootPane, "Chưa chọn dịch vụ cần hủy!", "Lỗi!", JOptionPane.WARNING_MESSAGE);
    	}
    	else
    		JOptionPane.showMessageDialog(rootPane, "Chưa chọn phòng!", "Lỗi!", JOptionPane.WARNING_MESSAGE);
    	return true;
    }
    
    private void btnHuyActionPerformed(java.awt.event.ActionEvent evt) throws Exception {//GEN-FIRST:event_btnHuyActionPerformed
        // TODO add your handling code here:
        huyDatDV();
    }//GEN-LAST:event_btnHuyActionPerformed
    
    
    public boolean themSoLuongDV(int soLuong, int soLuongThem) throws Exception {
    	String maDV;
    	Timestamp gioDatDV;
    	int maPT;
    	int i = tblDSP.getSelectedRow();
    	int j = tblDSDVDat.getSelectedRow();
    	
//    	maHD = String.valueOf(tblDSP.getValueAt(i, 0));
//    	maPhong = String.valueOf(tblDSP.getValueAt(i, 1));
    	maPT= Integer.parseInt(String.valueOf(tblDSP.getValueAt(i, 0).toString()));
    	ArrayList<DichVuSuDung> listHDDV = DAO_DichVuSuDung.getAllHDDV(maPT);
    	DichVuSuDung hDichVu = listHDDV.get(j);
    	
    	maDV = hDichVu.getDichVu().getMaDV();
    	gioDatDV = hDichVu.getGioDatDV();
    	
    	DichVuSuDung hddv = new DichVuSuDung(new PhieuThue(maPT), new DichVu(maDV), soLuong+soLuongThem, gioDatDV);
    	if(!DAO_DichVuSuDung.capNhatSoLuongDV(hddv))
			return false;
    	
    	ArrayList<DichVu> listDV = DAO_DichVu.timDV(maDV);
    	for (DichVu dichVu : listDV) {
			if(dichVu.getSoLuongTon()-soLuongThem<0) {
				JOptionPane.showMessageDialog(rootPane, "Số lượng tồn chỉ còn "+dichVu.getSoLuongTon()+" !", "Lỗi!", JOptionPane.WARNING_MESSAGE);
				return false;
			}
			else {
				DAO_DichVu.capNhatSoLuongTon(maDV, dichVu.getSoLuongTon()-soLuongThem);
			}
		}
		JOptionPane.showMessageDialog(rootPane, "Thêm số lượng dịch vụ thành công!");
		txtSoLuong.setText("");
    	modelDSDVDat.setRowCount(0);
    	DocDuLieuDatabaseVaoTableDSDVDat();
    	modelDSDV.setRowCount(0);
    	DocDuLieuDatabaseVaoTableDSDV();
    	return true;
    }
        
   
    private void btnLamMoiPhongActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLamMoiPhongActionPerformed
        // TODO add your handling code here:
    	taiLaiDSDV();
    }//GEN-LAST:event_btnLamMoiPhongActionPerformed
    
    public void timPhong(String ten) {
		ArrayList<PhieuThue> lstDV = DAO_PhieuThue.timPT(ten);
		for (PhieuThue dv : lstDV) {
			modelDSPhongDat.addRow(new Object[] {
					dv.getMaPT(),
					getTenPhong(dv.getPhong().getMaPhong()),
					getTenKH(dv.getHoaDon().getKhachHang().getMaKH())
			});
		}
    }
    private void btnTimPhongActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTimPhongActionPerformed
        // TODO add your handling code here:
    	String ten = txtTimPhong.getText().replaceAll("\\s\\s+", " ").trim();
        modelDSPhongDat.setRowCount(0);
        timPhong(ten);
    }//GEN-LAST:event_btnTimPhongActionPerformed
    public boolean botSoLuongDV(int soLuong, int soLuongBot) throws Exception {
    	String maDV;
    	int maPT;
    	Timestamp gioDatDV;
    	int i = tblDSP.getSelectedRow();
    	int j = tblDSDVDat.getSelectedRow();
    	
//    	maHD = String.valueOf(tblDSP.getValueAt(i, 0));
//    	maPhong = String.valueOf(tblDSP.getValueAt(i, 1));
    	maPT = Integer.parseInt(String.valueOf(tblDSP.getValueAt(i, 0).toString()));
    	ArrayList<DichVuSuDung> listHDDV = DAO_DichVuSuDung.getAllHDDV(maPT);
    	DichVuSuDung hDichVu = listHDDV.get(j);
    	
    	maDV = hDichVu.getDichVu().getMaDV();
    	int maHDDV = hDichVu.getMaHDDV();
    	gioDatDV = hDichVu.getGioDatDV();
//    	gioDatDV = new Timestamp(System.currentTimeMillis());
    	int sl = soLuong-soLuongBot;
    	System.out.println("SoLuong:"+sl);
    	DichVuSuDung hddv = new DichVuSuDung(maHDDV,new PhieuThue(maPT), new DichVu(maDV), soLuong-soLuongBot, gioDatDV);
    	if(!DAO_DichVuSuDung.capNhatSoLuongDV(hddv))
			return false;
    	
    	ArrayList<DichVu> listDV = DAO_DichVu.timDV(maDV);
    	for (DichVu dichVu : listDV) {
			DAO_DichVu.capNhatSoLuongTon(maDV, dichVu.getSoLuongTon()+soLuongBot);
			System.out.println("slTon:"+dichVu.getSoLuongTon());
		}
		JOptionPane.showMessageDialog(rootPane, "Giảm số lượng dịch vụ thành công!");
		txtSoLuong.setText("");
    	modelDSDVDat.setRowCount(0);
    	DocDuLieuDatabaseVaoTableDSDVDat();
    	modelDSDV.setRowCount(0);
    	DocDuLieuDatabaseVaoTableDSDV();
    	return true;
    }    

    private void btnGiamActionPerformed(java.awt.event.ActionEvent evt) throws Exception {//GEN-FIRST:event_btnGiamActionPerformed
        // TODO add your handling code here:
    	int soLuongBot, soLuong;
    	int i = tblDSDVDat.getSelectedRow();
    	
    	if(i!=-1) {
    		soLuong = Integer.parseInt(String.valueOf(tblDSDVDat.getValueAt(i, 2)));
        	
        	if(txtSoLuong.getText().equalsIgnoreCase("")) {
        		JOptionPane.showMessageDialog(rootPane, "Chưa nhập số lượng!", "Lỗi!", JOptionPane.WARNING_MESSAGE);
        		return;
        	}
        	
        	try {
        		soLuongBot = Integer.parseInt(txtSoLuong.getText());
    		} catch (Exception e) {
    			JOptionPane.showMessageDialog(rootPane, "Số lượng không hợp lệ!", "Lỗi!", JOptionPane.WARNING_MESSAGE);
    			return;
    		}
        	
        	if(soLuongBot>soLuong) {
        		JOptionPane.showMessageDialog(rootPane, "Số lượng bớt đi phải nhỏ hơn số lượng đang có trong hóa đơn!", "Lỗi!", JOptionPane.WARNING_MESSAGE);
        		return;
        	}
        	if(soLuongBot<=0) {
        		JOptionPane.showMessageDialog(rootPane, "Số lượng bớt đi phải lớn hơn 0!", "Lỗi!", JOptionPane.WARNING_MESSAGE);
        		return;
        	}
        	
        	botSoLuongDV(soLuong, soLuongBot);
    	}
    	else {
    		JOptionPane.showMessageDialog(rootPane, "Chưa chọn dịch vụ ở bảng 'DỊCH VỤ ĐÃ ĐẶT' !", "Lỗi", JOptionPane.WARNING_MESSAGE);
    	}
    }//GEN-LAST:event_btnGiamActionPerformed

    private void jLabel5MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel5MouseClicked
        // TODO add your handling code here:
//        GD_Chinh ui_Chinh = new GD_Chinh();
        this.setVisible(false);
    }//GEN-LAST:event_jLabel5MouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(GD_DatDichVu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(GD_DatDichVu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(GD_DatDichVu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(GD_DatDichVu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new GD_DatDichVu().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnDatDichVu;
    private javax.swing.JButton btnGiam;
    private javax.swing.JButton btnHuy;
    private javax.swing.JButton btnLamMoi;
    private javax.swing.JButton btnLamMoiPhong;
    private javax.swing.JButton btnTimDV;
    private javax.swing.JButton btnTimPhong;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JScrollPane scrollDSDV;
    private javax.swing.JScrollPane scrollDSDVDat;
    private javax.swing.JScrollPane scrollDSP;
    private javax.swing.JTable tblDSDV;
    private javax.swing.JTable tblDSDVDat;
    private javax.swing.JTable tblDSP;
    private javax.swing.JTextField txtSoLuong;
    private javax.swing.JTextField txtTimDV;
    private javax.swing.JTextField txtTimPhong;
    // End of variables declaration//GEN-END:variables
}
